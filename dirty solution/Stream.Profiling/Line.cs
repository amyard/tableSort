partial class Sorter
{
    private class Line : IComparable<Line>
    {
        public Line(string line)
        {
            int pos = line.IndexOf(".");
            Number = int.Parse(line.Substring(0, pos));
            Word = line.Substring(pos + 1);
        }

        public int Number { get; set; }
        public string Word { get; set; }

        public string Build() => $"{Number}. {Word}";

        public int CompareTo(Line? other)
        {
            // autogenerated
            // if (ReferenceEquals(this, other)) return 0;
            // if (ReferenceEquals(null, other)) return 1;
            // var numberComparison = Number.CompareTo(other.Number);
            // if (numberComparison != 0) return numberComparison;
            // return string.Compare(Word, other.Word, StringComparison.Ordinal);
            
            // from stream
            int result = Word.CompareTo(other.Word);
            
            if (result != 0)
                return result;
            
            return Number.CompareTo(other.Number);
        }
    }
}